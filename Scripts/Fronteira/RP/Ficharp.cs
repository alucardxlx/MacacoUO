
//////////////////////////////////////////////////////////////////////
// Automatically generated by Bradley's GumpStudio and roadmaster's 
// exporter.dll,  Special thanks goes to Daegon whose work the exporter
// was based off of, and Shadow wolf for his Template Idea.
//////////////////////////////////////////////////////////////////////
#define RunUo2_0

using System;
using Server;
using Server.Gumps;
using Server.Network;
using Server.Commands;

namespace Server.Gumps
{
    public class MyGump : Gump
    {
        Mobile caller;

        public static void Initialize()
        {
            CommandSystem.Register("ficharpteste", AccessLevel.Administrator, new CommandEventHandler(_OnCommand));
        }

        [Usage("")]
        [Description("Makes a call to your custom gump.")]
        public static void _OnCommand(CommandEventArgs e)
        {
            var caller = e.Mobile;

            if (caller.HasGump(typeof(MyGump)))
                caller.CloseGump(typeof(MyGump));
            caller.SendGump(new MyGump(caller));
        }

        public MyGump(Mobile from) : this()
        {
            caller = from;
        }

        public MyGump() : base(0, 0)
        {
            this.Closable = true;
            this.Disposable = true;
            this.Dragable = true;
            this.Resizable = true;

            AddPage(0);
            AddBackground(71, 34, 624, 466, 9200);
            AddImage(63, 27, 9002);
            AddButton(187, 162, 5575, 248, 0, GumpButtonType.Page, 0);
            AddButton(153, 275, 5583, 248, 0, GumpButtonType.Reply, 0);
            AddButton(184, 390, 5587, 248, 0, GumpButtonType.Reply, 0);
            AddButton(537, 162, 5563, 248, 0, GumpButtonType.Reply, 0);
            AddButton(532, 382, 5569, 248, 0, GumpButtonType.Reply, 0);
            AddButton(568, 274, 5581, 248, 0, GumpButtonType.Reply, 0);
            AddImage(319, 76, 11390);
            AddButton(348, 395, 5603, 248, 0, GumpButtonType.Reply, 0);
            AddButton(429, 396, 5601, 248, 0, GumpButtonType.Reply, 0);
            AddImage(154, 226, 4213);
            AddImage(119, 340, 4213);
            AddImage(151, 453, 4213);
            AddImage(503, 227, 4213);
            AddImage(534, 338, 4213);
            AddImage(503, 447, 4213);
            AddImage(371, 32, 9804);
            AddImage(341, 201, 30515);
            AddTextEntry(196, 228, 58, 20, 0, 0, @"PERFIL");
            AddTextEntry(124, 342, 120, 20, 0, 0, @"VIRTUDES E DEFEITOS");
            AddTextEntry(181, 456, 68, 20, 0, 0, @"OBJETIVOS");
            AddTextEntry(541, 230, 56, 20, 0, 0, @"BIOGRAFIA");
            AddTextEntry(557, 341, 88, 20, 0, 0, @"NOTAS MENTAIS");
            AddTextEntry(532, 449, 79, 20, 0, 0, @"NOTAS STAFF");
            AddLabel(353, 82, 0, @"FICHA RP");
            AddButton(104, 495, 5514, 248, 0, GumpButtonType.Reply, 0);
            AddButton(328, 455, 247, 248, 0, GumpButtonType.Reply, 0);
            AddButton(408, 455, 241, 248, 0, GumpButtonType.Reply, 0);

            /*
            TextRelay entry0 = info.GetTextEntry(0);
            string text0 = (entry0 == null ? "" : entry0.Text.Trim());

            TextRelay entry0 = info.GetTextEntry(0);
            string text0 = (entry0 == null ? "" : entry0.Text.Trim());

            TextRelay entry0 = info.GetTextEntry(0);
            string text0 = (entry0 == null ? "" : entry0.Text.Trim());

            TextRelay entry0 = info.GetTextEntry(0);
            string text0 = (entry0 == null ? "" : entry0.Text.Trim());

            TextRelay entry0 = info.GetTextEntry(0);
            string text0 = (entry0 == null ? "" : entry0.Text.Trim());

            TextRelay entry0 = info.GetTextEntry(0);
            string text0 = (entry0 == null ? "" : entry0.Text.Trim());
            */


        }



        public override void OnResponse(NetState sender, RelayInfo info)
        {
            Mobile from = sender.Mobile;

            switch (info.ButtonID)
            {
                case 0:
                    {

                        break;
                    }

            }
        }
    }
}
