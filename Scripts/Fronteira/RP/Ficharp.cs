
//////////////////////////////////////////////////////////////////////
// Automatically generated by Bradley's GumpStudio and roadmaster's 
// exporter.dll,  Special thanks goes to Daegon whose work the exporter
// was based off of, and Shadow wolf for his Template Idea.
//////////////////////////////////////////////////////////////////////
#define RunUo2_0

using System;
using Server;
using Server.Gumps;
using Server.Network;
using Server.Commands;

namespace Server.Gumps
{
    public class MyGump : Gump
    {
        Mobile caller;

        public static void Initialize()
        {
            CommandSystem.Register("ficharpteste", AccessLevel.Administrator, new CommandEventHandler(_OnCommand));
        }

        [Usage("")]
        [Description("Makes a call to your custom gump.")]
        public static void _OnCommand(CommandEventArgs e)
        {
            var caller = e.Mobile;

            if (caller.HasGump(typeof(MyGump)))
                caller.CloseGump(typeof(MyGump));
            caller.SendGump(new MyGump(caller));
        }

        public MyGump(Mobile from) : this()
        {
            caller = from;
        }

        public MyGump() : base(0, 0)
        {
            this.Closable = true;
            this.Disposable = true;
            this.Dragable = true;
            this.Resizable = false;

            AddPage(0);
            AddBackground(38, 21, 648, 512, 9200);
            AddButton(581, 490, 247, 248, 0, GumpButtonType.Reply, 0);
            AddImage(38, 22, 5174);
            AddImage(206, 22, 5174);
            AddImage(375, 22, 5174);
            AddImage(514, 22, 5174);
            AddImage(38, 134, 5174);
            AddImage(206, 134, 5174);
            AddImage(375, 134, 5174);
            AddImage(514, 134, 5174);
            AddImage(38, 245, 5174);
            AddImage(206, 245, 5174);
            AddImage(375, 245, 5174);
            AddImage(514, 245, 5174);
            AddImage(38, 356, 5174);
            AddImage(206, 356, 5174);
            AddImage(375, 356, 5174);
            AddImage(514, 356, 5174);
            AddImage(38, 421, 5174);
            AddImage(207, 421, 5174);
            AddImage(376, 421, 5174);
            AddImage(515, 421, 5174);
            AddImage(38, 526, 5177);
            AddImage(206, 526, 5177);
            AddImage(373, 526, 5177);
            AddImage(515, 526, 5177);
            AddImage(38, 0, 5171);
            AddImage(206, 0, 5171);
            AddImage(372, 0, 5171);
            AddImage(514, 0, 5171);
            AddImage(0, 0, 5170);
            AddImage(0, 526, 5156);
            AddImage(684, 526, 5158);
            AddImage(684, 0, 5172);
            AddImage(0, 38, 5153);
            AddImage(0, 150, 5153);
            AddImage(0, 262, 5153);
            AddImage(0, 374, 5153);
            AddImage(0, 418, 5153);
            AddImage(684, 38, 5155);
            AddImage(684, 150, 5155);
            AddImage(684, 262, 5155);
            AddImage(684, 372, 5155);
            AddImage(684, 417, 5155);
            AddImage(121, 93, 4037);
            AddImage(154, 101, 4213);
            AddImage(361, 53, 4246);
            AddButton(185, 171, 5575, 248, 0, GumpButtonType.Reply, 0);
            AddButton(186, 379, 5551, 248, 0, GumpButtonType.Reply, 0);
            AddButton(186, 277, 5583, 248, 0, GumpButtonType.Reply, 0);
            AddButton(677, 273, 5582, 248, 0, GumpButtonType.Reply, 0);
            AddButton(677, 169, 5572, 248, 0, GumpButtonType.Reply, 0);
            AddButton(677, 375, 5569, 248, 0, GumpButtonType.Reply, 0);
            AddButton(304, 306, 5603, 248, 0, GumpButtonType.Reply, 0);
            AddButton(606, 305, 5601, 248, 0, GumpButtonType.Reply, 0);
            AddImage(251, 102, 4230);
            AddImage(322, 173, 5011);
            AddImage(156, 234, 4213);
            AddImage(647, 232, 4213, 0);
            AddImage(648, 336, 4213, 0);
            AddImage(645, 438, 4213, 0);
            AddImage(153, 339, 4213);
            AddImage(152, 442, 4213);
            AddTextEntry(196, 237, 41, 20, 0, 1, @"PERFIL");
            AddTextEntry(159, 341, 118, 20, 0, 2, @"VIRTUDES E DEFEITOS");
            AddTextEntry(185, 445, 59, 20, 0, 3, @"OBJETIVOS");
            AddTextEntry(677, 234, 59, 20, 0, 4, @"OBJETIVOS");
            AddTextEntry(668, 338, 93, 20, 0, 5, @"NOTAS MENTAIS");
            AddTextEntry(668, 440, 93, 20, 0, 6, @"NOTAS STAFF");
            AddLabel(420, 67, 0, @"FICHA RP");
            AddButton(115, 562, 5514, 248, 0, GumpButtonType.Reply, 0);
            AddButton(733, 530, 4025, 248, 0, GumpButtonType.Reply, 0);
            AddButton(688, 531, 4008, 248, 0, GumpButtonType.Reply, 0);
            AddImage(367, 468, 93);
            AddButton(340, 464, 9004, 248, 0, GumpButtonType.Reply, 0);
            AddImage(482, 468, 93);


      

        }



        public override void OnResponse(NetState sender, RelayInfo info)
        {
            Mobile from = sender.Mobile;

            switch (info.ButtonID)
            {
                case 0:
                    {
                        /*
                        TextRelay entry1 = info.GetTextEntry(1);
                        string text1 = (entry1 == null ? "" : entry1.Text.Trim());

                        TextRelay entry2 = info.GetTextEntry(2);
                        string text2 = (entry2 == null ? "" : entry2.Text.Trim());

                        TextRelay entry3 = info.GetTextEntry(3);
                        string text3 = (entry3 == null ? "" : entry3.Text.Trim());

                        TextRelay entry4 = info.GetTextEntry(4);
                        string text4 = (entry4 == null ? "" : entry4.Text.Trim());

                        TextRelay entry5 = info.GetTextEntry(5);
                        string text5 = (entry5 == null ? "" : entry5.Text.Trim());

                        TextRelay entry6 = info.GetTextEntry(6);
                        string text6 = (entry6 == null ? "" : entry6.Text.Trim());
                        */
                        break;
                    }

            }
        }
    }
}
