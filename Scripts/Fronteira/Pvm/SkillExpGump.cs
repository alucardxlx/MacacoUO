
//////////////////////////////////////////////////////////////////////
// Automatically generated by Bradley's GumpStudio and roadmaster's 
// exporter.dll,  Special thanks goes to Daegon whose work the exporter
// was based off of, and Shadow wolf for his Template Idea.
//////////////////////////////////////////////////////////////////////
#define RunUo2_0

using System;
using Server;
using Server.Gumps;
using Server.Network;
using Server.Commands;
using System.Collections.Generic;

namespace Server.Gumps
{
    public class SkillExpGump : Gump
    {
        Mobile caller;

        /*
         *
         *   AddHtml(345, 290, 158, 21, @"Magic Resist", (bool)false, (bool)false);
            AddHtml(345, 269, 158, 21, @"Magery", (bool)false, (bool)false);
            AddHtml(345, 312, 158, 21, @"Evaluating Int.", (bool)false, (bool)false);
            AddHtml(345, 334, 158, 21, @"Meditation", (bool)false, (bool)false);

            AddHtml(573, 266, 158, 21, @"Swordsmanship", (bool)false, (bool)false);
            AddHtml(573, 288, 158, 21, @"Fencing", (bool)false, (bool)false);
            AddHtml(573, 310, 158, 21, @"Macefight", (bool)false, (bool)false);
            AddHtml(573, 332, 158, 21, @"Tactics", (bool)false, (bool)false);
            AddHtml(573, 354, 158, 21, @"Anatomy", (bool)false, (bool)false);
            AddHtml(573, 376, 158, 21, @"Healing", (bool)false, (bool)false);
            AddHtml(573, 398, 158, 21, @"ArmsLore", (bool)false, (bool)false);
            AddHtml(345, 356, 158, 21, @"Spirit Speak", (bool)false, (bool)false);
            AddHtml(345, 378, 158, 21, @"Necromancy", (bool)false, (bool)false);
            AddHtml(345, 398, 158, 21, @"Inscription", (bool)false, (bool)false);
          
            AddHtml(345, 418, 158, 21, @"Wrestling", (bool)false, (bool)false);
            AddHtml(794, 268, 158, 21, @"Archery", (bool)false, (bool)false);
            AddHtml(794, 289, 158, 21, @"Tracking", (bool)false, (bool)false);
            AddHtml(794, 310, 158, 21, @"Hiding", (bool)false, (bool)false);
            AddHtml(794, 331, 158, 21, @"Stealth", (bool)false, (bool)false);
            AddHtml(794, 352, 158, 21, @"Ninjutsu", (bool)false, (bool)false);
            AddHtml(794, 374, 158, 21, @"Focus", (bool)false, (bool)false);
            AddHtml(573, 419, 158, 21, @"Parrying", (bool)false, (bool)false);
            AddHtml(794, 396, 158, 21, @"Detect Hidden", (bool)false, (bool)false);
            AddHtml(794, 417, 158, 21, @"Poisoning", (bool)false, (bool)false);
            */

        public static void Initialize()
        {
            Combate.Add(SkillName.MagicResist);
            Combate.Add(SkillName.Magery);
            Combate.Add(SkillName.EvalInt);
            Combate.Add(SkillName.Meditation);
            Combate.Add(SkillName.Swords);
            Combate.Add(SkillName.Fencing);
            Combate.Add(SkillName.Macing);
            Combate.Add(SkillName.Tactics);
            Combate.Add(SkillName.Anatomy);
            Combate.Add(SkillName.Healing);
            Combate.Add(SkillName.ArmsLore);
            Combate.Add(SkillName.SpiritSpeak);
            Combate.Add(SkillName.Necromancy);
            Combate.Add(SkillName.Inscribe);
            Combate.Add(SkillName.Wrestling);
            Combate.Add(SkillName.Archery);
            Combate.Add(SkillName.Tracking);
            Combate.Add(SkillName.Hiding);
            Combate.Add(SkillName.Stealth);
            Combate.Add(SkillName.Ninjitsu);
            Combate.Add(SkillName.Focus);
            Combate.Add(SkillName.Parry);
            Combate.Add(SkillName.DetectHidden);
            Combate.Add(SkillName.Poisoning);
            CommandSystem.Register("xp", AccessLevel.Administrator, new CommandEventHandler(SkillsGump_OnCommand));
        }

        public static bool IsCombate(SkillName s)
        {
            return Combate.Contains(s);
        }

        [Usage("SkillsGump")]
        [Description("Makes a call to your custom gump.")]
        public static void SkillsGump_OnCommand(CommandEventArgs e)
        {
            if (e.Mobile.HasGump(typeof(SkillExpGump)))
            {
                e.Mobile.SendMessage("Gump de xp ja aberto");
                return;
            }
                
            e.Mobile.SendGump(new SkillExpGump(e.Mobile));
        }

        public static HashSet<SkillName> Combate = new HashSet<SkillName>();

        public static int GetPontos(Mobile m, SkillName s)
        {
            return (int)m.Skills[s].Value * 10;
        }

        public static string GetPontosStr(Mobile m, SkillName s)
        {
            return String.Format("{0}", GetPontos(m, s));
        }

        public SkillExpGump(Mobile caller) : base(0, 0)
        {
            this.Closable = true;
            this.Disposable = true;
            this.Dragable = true;
            this.Resizable = false;

            AddPage(0);
            AddBackground(328, 147, 926, 333, 1579);

            AddItem(390, 220, 3643);
            AddItem(374, 223, 3640);
            AddItem(413, 223, 3640);
            AddItem(635, 223, 7034);
            AddItem(614, 218, 5049);
            AddItem(849, 215, 5041);

            AddHtml(345, 290, 158, 21, @"Magic Resist", (bool)false, (bool)false);
            AddHtml(345, 269, 158, 21, @"Magery", (bool)false, (bool)false);
            AddHtml(345, 312, 158, 21, @"Evaluating Int.", (bool)false, (bool)false);
            AddHtml(345, 334, 158, 21, @"Meditation", (bool)false, (bool)false);

            AddHtml(573, 266, 158, 21, @"Swordsmanship", (bool)false, (bool)false);
            AddHtml(573, 288, 158, 21, @"Fencing", (bool)false, (bool)false);
            AddHtml(573, 310, 158, 21, @"Macefight", (bool)false, (bool)false);
            AddHtml(573, 332, 158, 21, @"Tactics", (bool)false, (bool)false);
            AddHtml(573, 354, 158, 21, @"Anatomy", (bool)false, (bool)false);
            AddHtml(573, 376, 158, 21, @"Healing", (bool)false, (bool)false);
            AddHtml(573, 398, 158, 21, @"ArmsLore", (bool)false, (bool)false);
            AddHtml(345, 356, 158, 21, @"Spirit Speak", (bool)false, (bool)false);
            AddHtml(345, 378, 158, 21, @"Necromancy", (bool)false, (bool)false);
            AddHtml(345, 398, 158, 21, @"Inscription", (bool)false, (bool)false);
          
            AddHtml(345, 418, 158, 21, @"Wrestling", (bool)false, (bool)false);
            AddHtml(794, 268, 158, 21, @"Archery", (bool)false, (bool)false);
            AddHtml(794, 289, 158, 21, @"Tracking", (bool)false, (bool)false);
            AddHtml(794, 310, 158, 21, @"Hiding", (bool)false, (bool)false);
            AddHtml(794, 331, 158, 21, @"Stealth", (bool)false, (bool)false);
            AddHtml(794, 352, 158, 21, @"Ninjutsu", (bool)false, (bool)false);
            AddHtml(794, 374, 158, 21, @"Focus", (bool)false, (bool)false);
            AddHtml(573, 419, 158, 21, @"Parrying", (bool)false, (bool)false);
            AddHtml(794, 396, 158, 21, @"Detect Hidden", (bool)false, (bool)false);
            AddHtml(794, 417, 158, 21, @"Poisoning", (bool)false, (bool)false);

            AddHtml(1025, 267, 158, 21, @"Musicanship", (bool)false, (bool)false);
            AddHtml(1025, 288, 158, 21, @"Peacemaking", (bool)false, (bool)false);
            AddHtml(1025, 309, 158, 21, @"Provocation", (bool)false, (bool)false);
            AddHtml(1025, 330, 158, 21, @"Discordance", (bool)false, (bool)false);

            AddHtml(345+158, 290, 158, 21, GetPontosStr(caller, SkillName.MagicResist), (bool)false, (bool)false);
            AddHtml(345 + 158, 269, 158, 21, GetPontosStr(caller, SkillName.Magery), (bool)false, (bool)false);
            AddHtml(345 + 158, 312, 158, 21, GetPontosStr(caller, SkillName.EvalInt), (bool)false, (bool)false);
            AddHtml(345 + 158, 334, 158, 21, GetPontosStr(caller, SkillName.Meditation), (bool)false, (bool)false);

            AddHtml(573 + 158, 266, 158, 21, GetPontosStr(caller, SkillName.Swords), (bool)false, (bool)false);
            AddHtml(573 + 158, 288, 158, 21, GetPontosStr(caller, SkillName.Fencing), (bool)false, (bool)false);
            AddHtml(573 + 158, 310, 158, 21, GetPontosStr(caller, SkillName.Macing), (bool)false, (bool)false);
            AddHtml(573 + 158, 332, 158, 21, GetPontosStr(caller, SkillName.Tactics), (bool)false, (bool)false);
            AddHtml(573 + 158, 354, 158, 21, GetPontosStr(caller, SkillName.Anatomy), (bool)false, (bool)false);
            AddHtml(573 + 158, 376, 158, 21, GetPontosStr(caller, SkillName.Healing), (bool)false, (bool)false);
            AddHtml(573 + 158, 398, 158, 21, GetPontosStr(caller, SkillName.ArmsLore), (bool)false, (bool)false);
            AddHtml(345 + 158, 356, 158, 21, GetPontosStr(caller, SkillName.SpiritSpeak), (bool)false, (bool)false);
            AddHtml(345 + 158, 378, 158, 21, GetPontosStr(caller, SkillName.Necromancy), (bool)false, (bool)false);
            AddHtml(345 + 158, 398, 158, 21, GetPontosStr(caller, SkillName.Inscribe), (bool)false, (bool)false);

            AddHtml(345 + 158, 418, 158, 21, GetPontosStr(caller, SkillName.Wrestling), (bool)false, (bool)false);
            AddHtml(794 + 158, 268, 158, 21, GetPontosStr(caller, SkillName.Archery), (bool)false, (bool)false);
            AddHtml(794 + 158, 289, 158, 21, GetPontosStr(caller, SkillName.Tracking), (bool)false, (bool)false);
            AddHtml(794 + 158, 310, 158, 21, GetPontosStr(caller, SkillName.Hiding), (bool)false, (bool)false);
            AddHtml(794 + 158, 331, 158, 21, GetPontosStr(caller, SkillName.Stealth), (bool)false, (bool)false);
            AddHtml(794 + 158, 352, 158, 21, GetPontosStr(caller, SkillName.Ninjitsu), (bool)false, (bool)false);
            AddHtml(794 + 158, 374, 158, 21, GetPontosStr(caller, SkillName.Focus), (bool)false, (bool)false);
            AddHtml(573 + 158, 419, 158, 21, GetPontosStr(caller, SkillName.Parry), (bool)false, (bool)false);
            AddHtml(794 + 158, 396, 158, 21, GetPontosStr(caller, SkillName.DetectHidden), (bool)false, (bool)false);
            AddHtml(794 + 158, 417, 158, 21, GetPontosStr(caller, SkillName.Poisoning), (bool)false, (bool)false);

            AddHtml(1025 + 158, 267, 158, 21, GetPontosStr(caller, SkillName.Musicianship), (bool)false, (bool)false);
            AddHtml(1025 + 158, 288, 158, 21, GetPontosStr(caller, SkillName.Peacemaking), (bool)false, (bool)false);
            AddHtml(1025 + 158, 309, 158, 21, GetPontosStr(caller, SkillName.Provocation), (bool)false, (bool)false);
            AddHtml(1025 + 158, 330, 158, 21, GetPontosStr(caller, SkillName.Discordance), (bool)false, (bool)false);

            AddButton(486, 271, 55, 248, 0, GumpButtonType.Reply, 0);
            AddImage(351 , 252, 50);
            AddImage(578 , 250, 50);
            AddImage(800, 250, 50);
            AddImage(570, 156, 92);
            AddImage(621, 156, 93);
            AddImage(714, 156, 94);
            AddHtml(626, 164, 101, 26, @"Combate", (bool)false, (bool)false);
            AddButton(486, 292, 55, 248, (int)Buttons.MagicResist, GumpButtonType.Reply, 0);
            AddButton(486, 314, 55, 248, (int)Buttons.EvalInt, GumpButtonType.Reply, 0);
            AddButton(486, 336, 55, 248, (int)Buttons.Meditation, GumpButtonType.Reply, 0);
            AddButton(485, 358, 55, 248, (int)Buttons.SS, GumpButtonType.Reply, 0);
            AddButton(485, 380, 55, 248, (int)Buttons.Necro, GumpButtonType.Reply, 0);
            AddButton(485, 400, 55, 248, (int)Buttons.Inscript, GumpButtonType.Reply, 0);
            AddButton(485, 420, 55, 248, (int)Buttons.Wrest, GumpButtonType.Reply, 0);
            AddButton(714, 268, 55, 248, (int)Buttons.Swords, GumpButtonType.Reply, 0);
            AddButton(714, 290, 55, 248, (int)Buttons.Fencing, GumpButtonType.Reply, 0);
            AddButton(714, 312, 55, 248, (int)Buttons.Macefight, GumpButtonType.Reply, 0);
            AddButton(714, 333, 55, 248, (int)Buttons.Tactics, GumpButtonType.Reply, 0);
            AddButton(714, 357, 55, 248, (int)Buttons.Anatomy, GumpButtonType.Reply, 0);
            AddButton(714, 377, 55, 248, (int)Buttons.Healing, GumpButtonType.Reply, 0);
            AddButton(714, 399, 55, 248, (int)Buttons.ArmsLore, GumpButtonType.Reply, 0);
            AddButton(714, 420, 55, 248, (int)Buttons.Parry, GumpButtonType.Reply, 0);
            AddButton(935, 269, 55, 248, (int)Buttons.Archery, GumpButtonType.Reply, 0);
            AddButton(935, 289, 55, 248, (int)Buttons.Tracking, GumpButtonType.Reply, 0);
            AddButton(935, 312, 55, 248, (int)Buttons.Hiding, GumpButtonType.Reply, 0);
            AddButton(935, 333, 55, 248, (int)Buttons.Stealth, GumpButtonType.Page, 0);
            AddButton(935, 354, 55, 248, (int)Buttons.Ninjutsu, GumpButtonType.Page, 0);
            AddButton(935, 375, 55, 248, (int)Buttons.Focus, GumpButtonType.Page, 0);
            AddButton(935, 397, 55, 248, (int)Buttons.DetectHidden, GumpButtonType.Page, 0);
            AddButton(935, 420, 55, 248, (int)Buttons.Poisoning, GumpButtonType.Page, 0);
            AddButton(895, 159, 1491, 1491, (int)Buttons.Help, GumpButtonType.Reply, 0);

            AddImage(321, 142, 10460);
            AddImage(1230, 134, 10460);
            AddImage(320, 456, 10460);
            AddImage(1229, 460, 10460);

        
            AddHtml(573, 439, 158, 21, @"Chivalry", (bool)false, (bool)false);
            AddButton(1168, 268, 55, 248, (int)Buttons.Musicianship, GumpButtonType.Reply, 0);
            AddButton(1168, 288, 55, 248, (int)Buttons.Peacemaking, GumpButtonType.Reply, 0);
            AddButton(1168, 309, 55, 248, (int)Buttons.Provocation, GumpButtonType.Reply, 0);
            AddButton(1168, 332, 55, 248, (int)Buttons.Discordance, GumpButtonType.Reply, 0);
            AddItem(1081, 226, 3763);
           
            AddButton(714, 441, 55, 248, (int)Buttons.Chivalry, GumpButtonType.Reply, 0);
        }


        public enum Buttons
        {
            Magery,
            MagicResist,
            EvalInt,
            Meditation,
            SS,
            Necro,
            Inscript,
            Wrest,
            Swords,
            Fencing,
            Macefight,
            Tactics,
            Anatomy,
            Healing,
            ArmsLore,
            Parry,
            Archery,
            Tracking,
            Hiding,
            Stealth,
            Ninjutsu,
            Focus,
            DetectHidden,
            Poisoning,
            Help,
            Musicianship,
            Peacemaking,
            Provocation,
            Discordance,
            Chivalry,
        }

        public override void OnResponse(NetState sender, RelayInfo info)
        {
            Mobile from = sender.Mobile;

            switch (info.ButtonID)
            {
                case 0:
                    {

                        break;
                    }

            }
        }
    }
}
